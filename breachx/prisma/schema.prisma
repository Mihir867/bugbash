// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  githubUsername String?
  accounts      Account[]
  sessions      Session[]
  repositories  Repository[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model RepositoryConfig {
  id                   String    @id @default(cuid())
  repositoryId         String    @unique
  hasDocker            Boolean   @default(false)
  dockerConfig         String?
  rootDirectory        String?
  buildCommand         String?
  runCommand           String?
  installCommand       String?
  environmentVariables Json?     // Store env vars as JSON array of key-value pairs
  
  // New fields for build tracking
  buildStatus          String?   // 'PENDING', 'BUILDING', 'DEPLOYED', 'FAILED'
  lastBuildId          String?   // AWS CodeBuild build ID
  lastBuildStartTime   DateTime?
  deploymentUrl        String?   // ngrok URL for the deployed application
  
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
  
  repository           Repository @relation(fields: [repositoryId], references: [id], onDelete: Cascade)
}

model Repository {
  id          String   @id @default(cuid())
  repoId      String
  name        String
  description String?
  url         String
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  config      RepositoryConfig?
  
  @@unique([userId, repoId])
}